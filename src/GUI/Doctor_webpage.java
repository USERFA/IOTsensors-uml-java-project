/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import java.io.IOException;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import uml_java_2021_project.DB.CRUD_appointment;
import uml_java_2021_project.DB.CRUD_person;
import uml_java_2021_project.Model.Appointment;
import uml_java_2021_project.Model.Patient;
import uml_java_2021_project.Model.Server_doc;
import uml_java_2021_project.controller.access_control;


/**
 *
 * @author Fadwa
 */
public class Doctor_webpage extends javax.swing.JFrame {

    static CRUD_appointment p ;
    static boolean is_confirmed_by_client;
    static  String strapp;

    /**
     * Creates new form Doctor_webpage
     */
    public Doctor_webpage() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenu1 = new javax.swing.JMenu();
        jRadioButtonMenuItem1 = new javax.swing.JRadioButtonMenuItem();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        canvas1 = new java.awt.Canvas();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem9 = new javax.swing.JMenuItem();
        jMenuItem10 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenuItem8 = new javax.swing.JMenuItem();
        jMenu5 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        jMenu1.setText("jMenu1");

        jRadioButtonMenuItem1.setSelected(true);
        jRadioButtonMenuItem1.setText("jRadioButtonMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Welcome doctor!");

        jButton1.setText("View patients");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("View appointments");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel1.setIcon(new javax.swing.ImageIcon("C:\\Users\\Hp_ProBook\\Desktop\\COURSES\\Snippets\\Projet OOP\\patient.jpg")); // NOI18N

        jLabel2.setIcon(new javax.swing.ImageIcon("C:\\Users\\Hp_ProBook\\Desktop\\COURSES\\Snippets\\Projet OOP\\pp.png")); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(71, 71, 71)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(canvas1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(75, 75, 75)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 396, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 386, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 33, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(127, 127, 127)
                        .addComponent(canvas1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap(68, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(37, 37, 37)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(60, 60, 60))
        );

        jMenu2.setText("Account");

        jMenuItem2.setText("Log out");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem2);

        jMenuItem9.setText("About us");
        jMenuItem9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem9ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem9);

        jMenuItem10.setText("Start server");
        jMenuItem10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem10ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem10);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Manage patients");
        jMenu3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu3ActionPerformed(evt);
            }
        });

        jMenuItem3.setText("Add patient");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem3);

        jMenuItem4.setText("Delete patient");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem4);

        jMenuItem5.setText("Modify patient");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem5);

        jMenuBar1.add(jMenu3);

        jMenu4.setText("Manage appointments");

        jMenuItem6.setText("Add appointment");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem6);

        jMenuItem7.setText("Delete appointment");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem7);

        jMenuItem8.setText("Modify appointment");
        jMenuItem8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem8ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem8);

        jMenuBar1.add(jMenu4);

        jMenu5.setText("Health record");

        jMenuItem1.setText("New file");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu5.add(jMenuItem1);

        jMenuBar1.add(jMenu5);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        if (evt.getSource() == jMenuItem3) {
            Patient_form f = new Patient_form();
            f.setVisible(true);
            f.setLocationRelativeTo(null);
            f.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
            System.out.println("adding the patient");
        }
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenu3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu3ActionPerformed
    }//GEN-LAST:event_jMenu3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (evt.getSource() == jButton1) {
            try {
                patients_list l = new patients_list();
                l.setVisible(true);
                l.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
                l.setLocationRelativeTo(null);
//            try {
//                CRUD_person p = new CRUD_person();
//                ArrayList<Patient> patients = p.getPatients();
//                System.err.println(p.getPatients());
//                String s = "";
//                for (Patient patient : patients) {
//                    s += patient + "\n";
//                }
//                JOptionPane.showMessageDialog(this, s);
//            } catch (SQLException ex) {
//                System.out.println(ex);
//            }

            } catch (SQLException ex) {
                Logger.getLogger(Doctor_webpage.class
                        .getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        String str = JOptionPane.showInputDialog(null, "Enter CIN : ",
                "Modify patient", 1);
        if (str != null) {
            try {
                CRUD_person p = new CRUD_person();
                Patient person = p.getPatient_by_CIN(str);
//            JOptionPane.showMessageDialog(null, "Your patient is : " + p.getPatient_by_CIN(str).toString(),
//                    "Modify patient", 1);
                String[] options = {"Nom", "prenom", "CIN", "tel", "email"};
                int x = JOptionPane.showOptionDialog(null, "Modify patient's: ",
                        "Modification options:",
                        JOptionPane.DEFAULT_OPTION, JOptionPane.INFORMATION_MESSAGE, null, options, options[0]);
                if (x == 0) {
                    String nom = JOptionPane.showInputDialog(null, "saisir nouveau nom : ",
                            "Modify patient", 1);
                    p.modify_patient_nom(str, nom);
                    JOptionPane.showMessageDialog(this, "Patient modifed", "INFORMATION", JOptionPane.INFORMATION_MESSAGE);

                }
                if (x == 1) {
                    String prenom = JOptionPane.showInputDialog(null, "saisir nouveau prenom : ",
                            "Modify patient", 1);
                    p.modify_patient_prenom(person, prenom);
                    JOptionPane.showMessageDialog(this, "Patient modifed", "INFORMATION", JOptionPane.INFORMATION_MESSAGE);

                }
                if (x == 2) {
                    String CIN = JOptionPane.showInputDialog(null, "saisir nouvelle CIN : ",
                            "Modify patient", 1);
                    p.modify_patient_CIN(person, CIN);
                    JOptionPane.showMessageDialog(this, "Patient modifed", "INFORMATION", JOptionPane.INFORMATION_MESSAGE);

                }
                if (x == 3) {
                    String tel = JOptionPane.showInputDialog(null, "saisir nouveau tel : ",
                            "Modify patient", 1);
                    p.modify_patient_tel(person, tel);
                    JOptionPane.showMessageDialog(this, "Patient modifed", "INFORMATION", JOptionPane.INFORMATION_MESSAGE);

                }
                if (x == 4) {
                    String email = JOptionPane.showInputDialog(null, "saisir nouveau email : ",
                            "Modify patient", 1);
                    p.modify_patient_email(person, email);
                    JOptionPane.showMessageDialog(this, "Patient modifed", "INFORMATION", JOptionPane.INFORMATION_MESSAGE);

                }

            } catch (SQLException ex) {
                Logger.getLogger(Doctor_webpage.class
                        .getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        if (evt.getSource() == jMenuItem2) {
            this.setVisible(false);
            new access_control().main(null);
        }
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        if (evt.getSource() == jMenuItem4) {
            try {
                CRUD_person d = new CRUD_person();
                String str = JOptionPane.showInputDialog(null, "Enter CIN : ",
                        "Delete patient", 1);
                System.out.println(str);
                if (str != null) {
                    String[] options = {"Yes", "No"};
                    int x = JOptionPane.showOptionDialog(null, "Are you sure you want to delete this patient",
                            "", JOptionPane.DEFAULT_OPTION, JOptionPane.INFORMATION_MESSAGE, null, options, options[0]);
                    if (x == 0) {
                        d.delete_patient((String) str);
                        System.out.println(str + " was deleted");
                        JOptionPane.showMessageDialog(this, "Patient deleted", "INFORMATION", JOptionPane.INFORMATION_MESSAGE);
                    } else {
                        JOptionPane.showMessageDialog(this, "The deletion process is stopped", "INFORMATION", JOptionPane.INFORMATION_MESSAGE);
                    }
                } else {
                    System.out.println("You should input your patient's CIN first to delete it");

                }
            } catch (SQLException ex) {
                Logger.getLogger(Doctor_webpage.class
                        .getName()).log(Level.SEVERE, null, ex);
            }

        }
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        if (evt.getSource() == jMenuItem6) {
            Appoitnment_form f = new Appoitnment_form();
            f.setVisible(true);
            f.setLocationRelativeTo(null);
            f.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
            System.out.println("adding the appointment");

        }    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
        if (evt.getSource() == jMenuItem7) {
            try {
                CRUD_appointment p = new CRUD_appointment();
                String str = JOptionPane.showInputDialog(null, "Enter patient name : ",
                        "Delete appointment", 1);
                System.out.println(str);
                if (str != null) {
                    p.delete_appointment((String) str);
                    System.out.println(str + " was deleted");
                    JOptionPane.showMessageDialog(this, "Appointment deleted!", "INFORMATION", JOptionPane.INFORMATION_MESSAGE);

                }
            } catch (SQLException ex) {
                Logger.getLogger(Doctor_webpage.class
                        .getName()).log(Level.SEVERE, null, ex);
            }
        }

    }//GEN-LAST:event_jMenuItem7ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if (evt.getSource() == jButton2) {
            try {
                appointments_list l = new appointments_list();
                l.setVisible(true);
                l.setLocationRelativeTo(null);
                l.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
//            try {
//                CRUD_appointment p = new CRUD_appointment();
//                ArrayList<Appointment> apps = p.getAppointments();
//                System.err.println(apps);
//                String s = "";
//                for (Appointment a : apps) {
//                    s += a + "\n";
//                }
//                JOptionPane.showMessageDialog(this, s);
//            } catch (SQLException ex) {
//                System.out.println(ex);
//            }

            } catch (SQLException ex) {
                Logger.getLogger(Doctor_webpage.class
                        .getName()).log(Level.SEVERE, null, ex);
            }
        }    }//GEN-LAST:event_jButton2ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        if (evt.getSource() == jMenuItem1) {
            HealthRecord hr = new HealthRecord();
            hr.setVisible(true);
            hr.setLocationRelativeTo(null);
            hr.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem9ActionPerformed
        if (evt.getSource() == jMenuItem9) {
            About b = new About();
            b.setVisible(true);
            b.setLocationRelativeTo(null);
            b.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        }
    }//GEN-LAST:event_jMenuItem9ActionPerformed

    private void jMenuItem8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem8ActionPerformed
        if (evt.getSource() == jMenuItem8) {
            strapp = JOptionPane.showInputDialog(null, "Enter patient_name : ",
                    "Modify appointment's date", 1);
            if (strapp != null) {
                try {
                    p = new CRUD_appointment();
                    Appointment ap = p.get_app_by_patient_name(strapp);
                    dp da = new dp();
                    da.setVisible(true);
                    da.setLocationRelativeTo(null);
                    da.setDefaultCloseOperation(DISPOSE_ON_CLOSE);

//                    if (da.getjButton1().isSelected()) {
//                        java.sql.Date d = new java.sql.Date(da.getDt().getTime());
//                        p.modify_appointment_date(str, d);
//                        JOptionPane.showMessageDialog(this, "Appointment modified!", "Information", JOptionPane.INFORMATION_MESSAGE);
//
//                    }
                } catch (SQLException ex) {
                    Logger.getLogger(Doctor_webpage.class
                            .getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_jMenuItem8ActionPerformed

    private void jMenuItem10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem10ActionPerformed
        //server socket
        if (evt.getSource() == jMenuItem10) {
            int port = 2020;
            try {
                Thread t = new Server_doc(port);
                t.start();
                System.out.println("Server is on!!!!!!");
            } catch (Exception e) {
            }
        }
    }//GEN-LAST:event_jMenuItem10ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws IOException {
        //must implement the server isde of a socket in this page
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Doctor_webpage.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Doctor_webpage.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Doctor_webpage.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Doctor_webpage.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Doctor_webpage d = new Doctor_webpage();
                d.setVisible(true);
                d.setLocationRelativeTo(null);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Canvas canvas1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem10;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem1;
    // End of variables declaration//GEN-END:variables
}
